{% extends 'base.html.twig' %}

{% block body %}
    <h1 class="text-xl font-bold mb-4">Ajouter un nouveau morceau</h1>

    {{ form_start(form) }}

    <div class="mb-4">
        {{ form_label(form.title, 'Titre de la chanson', {'label_attr': {'class': 'block font-semibold'}}) }}
        {{ form_widget(form.title, {'attr': {'class': 'w-full p-2 border rounded'}}) }}
    </div>

    <div class="mb-4">
        <label for="artistList" class="block font-semibold">Sélectionner un interprète</label>
        <select id="artistList" class="w-full p-2 border rounded">
            <option value="">-- Choisir un artiste --</option>
            {% for artist in artists %}
                <option value="{{ artist.id|e('html') }}">{{ artist.name|e('html') }}</option>
            {% endfor %}
        </select>
        <button type="button" id="addArtist" class="mt-2 bg-green-500 text-white px-4 py-2 rounded">Ajouter</button>
    </div>

    <div class="mb-4">
        <label for="newPerson" class="block font-semibold">Ajouter un nouvel interprète</label>
        <input type="text" id="newPerson" name="newPerson" class="w-full p-2 border rounded" placeholder="Nom de l'artiste">
        <button type="button" id="addNewArtist" class="mt-2 bg-blue-500 text-white px-4 py-2 rounded">Ajouter</button>
    </div>

    <div id="selectedArtists" class="mt-4 p-2 border rounded bg-gray-100 min-h-[50px]">
        <p class="text-gray-500 text-sm">Artistes ajoutés :</p>
    </div>

    <button type="button" id="clearArtists" class="mt-2 bg-red-500 text-white px-4 py-2 rounded">Effacer</button>

    <div class="mb-4 flex items-center">
        {{ form_widget(form.isDownloaded, {'attr': {'class': 'rounded text-blue-600 focus:ring-blue-500 w-5 h-5'}}) }}
        <label for="{{ form.isDownloaded.vars.id }}" class="ml-2 text-gray-700 font-medium">
            {{ form_label(form.isDownloaded) }}
        </label>
    </div>

    <div class="mb-4">
        {{ form_label(form.userSongKnowledge, null, {'label_attr': {'class': 'block text-gray-700 font-semibold'}}) }}
        {{ form_widget(form.userSongKnowledge, {'attr': {'class': 'w-full mt-1 p-2 border border-gray-300 rounded shadow-sm focus:ring-blue-500 focus:border-blue-500'}}) }}
    </div>

    <div class="mt-6">
        {{ form_widget(form.save, {'attr': {'class': 'px-4 py-2 bg-blue-500 text-white font-semibold rounded hover:bg-blue-600 transition duration-300'}}) }}
    </div>

    {{ form_end(form) }}

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const artistList = document.getElementById("artistList");
            const addArtistBtn = document.getElementById("addArtist");
            const newPersonInput = document.getElementById("newPerson");
            const addNewArtistBtn = document.getElementById("addNewArtist");
            const selectedArtistsDiv = document.getElementById("selectedArtists");
            const clearArtistsBtn = document.getElementById("clearArtists");

            function escapeSpecialChars(str) {
                return str.replace(/["'&<>]/g, function (char) {
                    return {
                        '"': '&quot;',
                        "'": '&#039;',
                        '&': '&amp;',
                        '<': '&lt;',
                        '>': '&gt;'
                    }[char];
                });
            }

            function addArtist(id, name) {
                if (!document.querySelector(`input[value="${id}"]`)) {
                    const artistElement = document.createElement("div");
                    artistElement.classList.add("flex", "items-center", "justify-between", "p-1", "bg-white", "rounded", "shadow", "mt-1");
                    artistElement.innerHTML = `
                        <span>${escapeSpecialChars(name)}</span>
                        <input type="hidden" name="song[person][]" value="${id}">
                        <button type="button" class="ml-2 text-red-500 removeArtist">✖</button>
                    `;
                    selectedArtistsDiv.appendChild(artistElement);

                    artistElement.querySelector(".removeArtist").addEventListener("click", function () {
                        artistElement.remove();
                    });
                }
            }

            addArtistBtn.addEventListener("click", function () {
                const selectedOption = artistList.options[artistList.selectedIndex];
                if (selectedOption.value) {
                    addArtist(selectedOption.value, selectedOption.text);
                }
            });

            addNewArtistBtn.addEventListener("click", function () {
                const newArtistName = newPersonInput.value.trim();
                if (newArtistName) {
                    const tempId = `new_${newArtistName.replace(/\s+/g, '_')}`;
                    addArtist(tempId, newArtistName);
                    newPersonInput.value = "";
                }
            });

            clearArtistsBtn.addEventListener("click", function () {
                selectedArtistsDiv.innerHTML = '<p class="text-gray-500 text-sm">Artistes ajoutés :</p>';
            });
        });
    </script>
{% endblock %}